name: Container Images (dynamic submodules)

on:
  push:
    paths:
      - 'src/**'
      - 'test/**'
      - 'containers/**'
      - '.github/workflows/common_container_images.yaml'
  pull_request:
    paths:
    - 'src/**'
    - 'test/**'
    - 'containers/**'
    - '.github/workflows/common_container_images.yaml'

env:
  DOCKER_REPO: "fjudith"

jobs:
  build:
    name: "Build OCI image: ${{ matrix.image }}"
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        image:
          - spinal-core-hub
          - spinal-organ-dump_manager
          - spinal-organ-forge
          - spinal-organ-network_sample

    steps:
      - uses: FranzDiebold/github-env-vars-action@v1.2.1

      - name: Checkout code base
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      
      - name: Set ENV variables
        run: |
          cat ./containers/${{ matrix.image }}/.env >> $GITHUB_ENV
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      # - name: Login to Harbor
      #   uses: docker/login-action@v1 
      #   with:
      #     registry: harbor.testruction.io
      #     username: ${{ secrets.HARBOR_USERNAME }}
      #     password: ${{ secrets.HARBOR_PASSWORD }} 

      - name: Build OCI compliant image
        id: container_image_build
        uses: docker/build-push-action@v2
        with:
          context: ./containers/${{ matrix.image }}
          load: true
          tags: docker.io/${{ env.DOCKER_REPO }}/${{ matrix.image }}:${{ github.sha }}
          file: ./containers/${{ matrix.image }}/Dockerfile
          platforms: linux/amd64
      
      - name: Scan image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: docker.io/${{ env.DOCKER_REPO }}/${{ matrix.image }}:${{ github.sha }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push image to Docker Hub registry
        id: dockerhub
        uses: docker/build-push-action@v2
        with:
          context: ./containers/${{ matrix.image }}
          push: true
          tags: docker.io/${{ env.DOCKER_REPO }}/${{ matrix.image }}:${{ env.SEMVER_MAJOR }},docker.io/${{ env.DOCKER_REPO }}/${{ matrix.image }}:${{ env.SEMVER_MINOR }},docker.io/${{ env.DOCKER_REPO }}/${{ matrix.image }}:${{ env.SEMVER_PATCH }},docker.io/${{ env.DOCKER_REPO }}/${{ matrix.image }}:${{ env.SEMVER_TAG }},docker.io/${{ env.DOCKER_REPO }}/${{ matrix.image }}:latest
          file: ./containers/${{ matrix.image }}/Dockerfile
          platforms: linux/amd64

      # - name: Push image to Harbor registry
      #   id: harbor
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./containers/${{ matrix.image }}
      #     push: true
      #     tags: harbor.testruction.io/${{ env.DOCKER_REPO }}/${{ matrix.image }}:${{ env.SEMVER_TAG }},harbor.testruction.io/${{ env.DOCKER_REPO }}/${{ matrix.image }}:latest
      #     file: ./containers/${{ matrix.image }}/Dockerfile
      #     platforms: linux/amd64
